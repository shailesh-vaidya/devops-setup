apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-pipeline-config
  namespace: jenkins
data:
  demo-pipeline.xml: |
    <?xml version='1.1' encoding='UTF-8'?>
    <flow-definition plugin="workflow-job@2.41">
      <description>Demo pipeline that clones from Gitea and runs demo.sh</description>
      <keepDependencies>false</keepDependencies>
      <properties/>
      <definition class="org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition" plugin="workflow-cps@2.90">
        <scm class="hudson.plugins.git.GitSCM" plugin="git@4.8.3">
          <configVersion>2</configVersion>
          <userRemoteConfigs>
            <hudson.plugins.git.UserRemoteConfig>
              <url>http://gitea.gitea.svc.cluster.local:3000/admin/demo.git</url>
              <credentialsId>gitea-credentials</credentialsId>
            </hudson.plugins.git.UserRemoteConfig>
          </userRemoteConfigs>
          <branches>
            <hudson.plugins.git.BranchSpec>
              <name>*/main</name>
            </hudson.plugins.git.BranchSpec>
          </branches>
          <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
          <submoduleCfg class="list"/>
          <extensions/>
        </scm>
        <scriptPath>Jenkinsfile</scriptPath>
        <lightweight>true</lightweight>
      </definition>
      <triggers/>
      <disabled>false</disabled>
    </flow-definition>
  Jenkinsfile: |
    pipeline {
        agent any
        
        stages {
            stage('Clone Repository') {
                steps {
                    echo 'Cloning demo repository from Gitea...'
                    checkout scm
                }
            }
            
            stage('Execute Demo Script') {
                steps {
                    echo 'Executing demo.sh script...'
                    sh 'chmod +x demo.sh'
                    sh './demo.sh'
                }
            }
        }
        
        post {
            success {
                echo 'Pipeline completed successfully!'
            }
            failure {
                echo 'Pipeline failed!'
            }
        }
    }
